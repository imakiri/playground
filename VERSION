VERSION 1.0
PROJECT playground
SCHEMA main: /!C(?<commitNum>\d+)(?:\.(?<subCommitNum>\d+))?(?<noteList>[\s\S]+?)(?=\s!|$)/g, noteList: /--([\s\S]+?)(?=\s--|$)/g
DATA

!C21
    --Добавлена история версий\коммитов

!C22
    --Удалена WaitGroup за ненадобностью
    --data: Реструктурирован код
    --data/internal: Код модуля написан на ~33%

!C23
    --Адаптирование под запуск на виртуальном сервере Ubuntu

!C24
    --Реструктурирование\чистка кода
!C24.1
    --Минорные исправления\багфиксы

!C25
    --Переименование папок в связи с особеннсотями golang
    #data/internal -> #data/inside, #data/external -> #data/outside
    --data/inside: Первичная имплементация обработчика ошибок
    #checker, #checkerImp, #IncorrectArgumentError, #NotFoundError
    --Тестирование обработки ошибок с помощью type switches #misc.Test2
!C25.1
    --Минорные исправления\багфиксы
    #data/inside/checkerImp.createUser, #app.IsAuthorized
!C25.2
    --Минорные исправления\багфиксы #misc.Test2
!C25.3
    --data/inside: Переименование файлов
    #inside.go, #outside.go
!C25.4
    --Тестирование обработки ошибок с помощью type switches
    #misc.Test3, #data/inside.InternalServiceError
!C25.5
    --data/inside: Реструктуризация кода
    #check.go, #err.go
!C25.6
    --data/inside: Рефакторинг кода
    #errData.go, #errUser.go, #funcData.go, #funcUser.go
    --data/inside: Переход на switch-case в функциях проверки checker #errUser.go
    --data/inside: Добавлена новая ошибка #UserAlreadyExistError
!C25.7
    --Обновлено README.md

!C26
    --data/inside: Перекат на goqu - SQL функции V1
    --data/inside: Обновлен код ошибок #inside.go
    --data/inside: Добавлена новая ошибка #NoUserToDelete
    --data/inside: Переписана функция #build
    --data/inside: Добавлен интерфейс #Exec
    --data/inside: Переписаны SQL функции под новый интерфейс
    #GetUserV1, #GetUserPassHashV1, #CreateUserV1, #DeleteUserV1
!C26.1
    --data/schema: Обновлена схема базы данных #schema.sql
    --data/inside: Переименование файлов и типов
    #errUser.go -> #misc.go, и др.
!C26.2
    --data/inside: Исправлен баг #misc.go:60
    --data/inside: Добавлена SQL функция #GetUserV2 использующая sqlx

!C27
    --data: schema перемещена в inside
    --data/inside: Новая реализация методов данных, структур данных #MAIN
    --data/inside: Новая система имён. Не могу понять, в Go отсутствуют возможности адекватного вложения типов?
!C27.1
    --data: Рефакторинг
!C27.2
    --Чистка и рефакторинг
    #api #app #data #web
!C27.3
    --data.Internal.Main: Обновлен код ExecuteSQL методов
    --data.Internal.Main: Добавленны сущности и их ExecuteSQL методы
    #UpdateUser_1, #UpdateUserPassHash_1
!C27.4
    --data.Internal.Main: Минорные исправления
    --web: Добавлена тестовая версия #GET_Root_User_Login_1
!C27.5
    --Возвращение к CamelCase

!C28
    --Подготовка к переходу на микросервисную архитектуру #core
!C28.1
    --Минорные исправления
    --web: Реализация раздачи статики с помощью http.FileServer

!С29
    --Реализация конфига yml+viper
    --Перекат на PostgreSQL
    --data: Реализация data методов с использованием "продвинутых" возможностей sqlx
    --core: Подготовка к реализации RPC интерфейса

!C30
    --app.ip: Функция Detect
    --web: GetRootDetect
    --Реализация простой функции детектирования лица на основе OpenCV

!С31
    --protos: Учебная реализация gRPC - сервис FaceDetector
    --ips: Добавлена имплиментация protos.FaceDetector
    --cmd: Приложения public.HTTPServer и private.ImageProcessingServer
    --app, data, core, misc - legacy, не используется
!C31.1
    --cmd.public.HTTPServer: Использование файла конфига для хранение имени домена ImageProcessing сервера
!C31.2
    --web: Минорные исправления
!C31.3
    --web: Минорные улучшения\исправления

!C32
    --cmd: +private.ImageGenerator
!C32.1
    --cmd.private.ImageGenerator обновленна реализация

!C33
    --Рефакторинг и чистка в core, web, cmd.public.HTTPServer
!C33.1
    --Рефакторинг и чистка, реимплементация и реорганизация большой части актуального кода в core, api, app, data
!C33.2
    --data: Добавлен конструктор веб клиента
    --core: Изменена структура конфиг файла
    --core, data, api, app, web: Конструкторы теперь сохраняют только необходимые для работы переменные
    --app: Методы выделены в отдельный го файл
    --data: Восстановлена errorWrapper функция
!C33.3
    --gate, app, core: Скелет мененжера прав доступа и сессий

!С34
    --Изменение цели проекта
    --Реструктуризация, реорганизация кода и архитектуры проекта
    --ips: Удалён
    --core: Множественные изменения кода
!C34.1
    --Изменение архитектуры проекта - теперь контроллеры pkg напрямую подключаются к базе
    --core: Пакет декларации структур и интерфейсов системы
    --data: Пакет декларации структур и функций базы данных
    --pkg: Пакеты имплементации сервисов системы
    --ei: External Interfaces - пакеты имплементации публичных интерфейсов
    --gate: Пакет связывающий систему и публичные интерфейсы
!C34.2
    --Переписан лаунчер, востановленна возможность запуска
    --web: Root endpoint
!C34.3
    --Добавлена и настроена Docker контейнеризация
    --Добавлен grpc configService, от него главный сервис будет получать конфигурацию запуска
!C34.4
    --configService -> adminService и теперь GetConfig отправляет полноценный конфиг, а не только DSN
!C34.5
    --Минорная реорганизация файловой структуры проекта
    --gate/auth: Макет пакета
!C34.6
    --Минорная реорганизация файловой структуры проекта
    --gate/auth: Макет пакета
!C34.7
    --gate/auth: Переименовывание типов и их реорганизация
!C34.8
    --gate/auth: Макет пакета
!C34.9
    --gate/auth: Первичная имплементация email сервиса
!C34.10
    --Реструктуризация папок проекта
    --Добавлен erres - пакет ошибок
!C34.11
    --Реструктуризация папок проекта
    --Добавлен transport - пакет связности системы. В текущей реализации - gRPC
    --Добавлен message - пакет отправки сообщений
    --cfg: Методы и cfg(admin) сервисы перенесены из cmd в cfg
    --cmd: Реорганизация зависимостей, вынос параметров запуска в аргументы функций
!C34.12
    --Добавлена proto - папка с прото файлами
    --Настроена компиляция go_out, go-grpc_out в пакеты core, transport соответственно
    --Теперь внутренние сервисы получают конфигурацию от конфиг сервиса
    --Чистка устаревшего кода
!C34.13
    --Переименовывание проекта -> gorum
    --message: Множественные исправления кода
    --message: Добавлен адаптер Service
!C34.14
    --core -> utils
    --transport: Удалён
    --cfg: Убраны и переработаны лишние зависимости от core и transport
    --cfg: Реарганизован прото и его имплементация
    --web: Обновлён конструктор и добавлен метод запуска сервиса
    --Переделанны лаунчеры
!C34.15
    --utils -> service
    --Переработаны конструкторы сервисов
    --Чистка и множественные исправления кода
    --Обновлен cfg.proto
!C34.16
    --Доработанны конструкторы сервисов
    --Множественные исправления кода
    --data.Auth: Имплементация дата методов